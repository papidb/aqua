name: aqua_dev

services:
  aqua_core_dev:
    container_name: aqua_core_dev
    image: aqua/backend/core
    build:
      context: .
      dockerfile: docker/core/Dockerfile.dev
    env_file:
      - .env
    environment:
      - SERVICE_NAME=core-backend
      - PORT=9400
      - POSTGRES_HOST=host.docker.internal
    ports:
      - "9400:9400"
    restart: always
    volumes:
      - .:/go/src/app
      - /go/src/app/tmp
    extra_hosts:
      - "host.docker.internal:host-gateway"

  aqua_notification_dev:
    container_name: aqua_notification_dev
    image: aqua/backend/notification
    build:
      context: .
      dockerfile: docker/notification/Dockerfile.dev
    env_file:
      - .env
    environment:
      - SERVICE_NAME=notification-backend
      - PORT=9401
      - POSTGRES_HOST=host.docker.internal
    ports:
      - "9401:9401"
    restart: always
    volumes:
      - .:/go/src/app
      - /go/src/app/tmp
    extra_hosts:
      - "host.docker.internal:host-gateway"

  RABBIT_MQ_dev:
    image: rabbitmq:3-management
    container_name: RABBIT_MQ_dev
    ports:
      - "${RABBIT_MQ_PORT}:${RABBIT_MQ_PORT}" # RabbitMQ message broker (AMQP)
      - "${RABBIT_MQ_MANAGEMENT_PORT}:${RABBIT_MQ_MANAGEMENT_PORT}" # RabbitMQ Management Console
    environment:
      RABBIT_MQ_DEFAULT_USER: ${RABBIT_MQ_DEFAULT_USER}
      RABBIT_MQ_DEFAULT_PASS: ${RABBIT_MQ_DEFAULT_PASS}
    volumes:
      - RABBIT_MQ_dev_data:/var/lib/rabbitmq

  postgres_dev:
    image: postgres:15
    container_name: postgres_dev
    ports:
      - "${POSTGRES_PORT}:${POSTGRES_PORT}"
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DATABASE}
    volumes:
      - postgres_dev_data:/var/lib/postgresql/data

volumes:
  postgres_dev_data:
  RABBIT_MQ_dev_data:
